import math
from .utils.interpolate import spline


class WebColors(object):
    """
    Source: https://www.w3schools.com/cssref/css_colors.asp
    """
    css3 = {
        "AliceBlue":         (240, 248, 255), "AntiqueWhite":         (250, 235, 215), "Aqua":            (  0, 255, 255),  # noqa E501,E231,E201
        "Aquamarine":        (127, 255, 212), "Azure":                (240, 255, 255), "Beige":           (245, 245, 220),  # noqa E501,E231,E201
        "Bisque":            (255, 228, 196), "Black":                (  0,   0,   0), "BlanchedAlmond":  (255, 235, 205),  # noqa E501,E231,E201
        "Blue":              (  0,   0, 255), "BlueViolet":           (138,  43, 226), "Brown":           (165,  42,  42),  # noqa E501,E231,E201
        "BurlyWood":         (222, 184, 135), "CadetBlue":            ( 95, 158, 160), "Chartreuse":      (127, 255,   0),  # noqa E501,E231,E201
        "Chocolate":         (210, 105,  30), "Coral":                (255, 127,  80), "CornflowerBlue":  (100, 149, 237),  # noqa E501,E231,E201
        "Cornsilk":          (255, 248, 220), "Crimson":              (220,  20,  60), "Cyan":            (  0, 255, 255),  # noqa E501,E231,E201
        "DarkBlue":          (  0,   0, 139), "DarkCyan":             (  0, 139, 139), "DarkGoldenRod":   (184, 134,  11),  # noqa E501,E231,E201
        "DarkGray":          (169, 169, 169), "DarkGreen":            (  0, 100,   0), "DarkGrey":        (169, 169, 169),  # noqa E501,E231,E201
        "DarkKhaki":         (189, 183, 107), "DarkMagenta":          (139,   0, 139), "DarkOliveGreen":  ( 85, 107,  47),  # noqa E501,E231,E201
        "DarkOrange":        (255, 140,   0), "DarkOrchid":           (153,  50, 204), "DarkRed":         (139,   0,   0),  # noqa E501,E231,E201
        "DarkSalmon":        (233, 150, 122), "DarkSeaGreen":         (143, 188, 143), "DarkSlateBlue":   ( 72,  61, 139),  # noqa E501,E231,E201
        "DarkSlateGray":     ( 47,  79,  79), "DarkSlateGrey":        ( 47,  79,  79), "DarkTurquoise":   (  0, 206, 209),  # noqa E501,E231,E201
        "DarkViolet":        (148,   0, 211), "DeepPink":             (255,  20, 147), "DeepSkyBlue":     (  0, 191, 255),  # noqa E501,E231,E201
        "DimGray":           (105, 105, 105), "DimGrey":              (105, 105, 105), "DodgerBlue":      ( 30, 144, 255),  # noqa E501,E231,E201
        "FireBrick":         (178,  34,  34), "FloralWhite":          (255, 250, 240), "ForestGreen":     ( 34, 139,  34),  # noqa E501,E231,E201
        "Fuchsia":           (255,   0, 255), "Gainsboro":            (220, 220, 220), "GhostWhite":      (248, 248, 255),  # noqa E501,E231,E201
        "Gold":              (255, 215,   0), "GoldenRod":            (218, 165,  32), "Gray":            (128, 128, 128),  # noqa E501,E231,E201
        "Green":             (  0, 128,   0), "GreenYellow":          (173, 255,  47), "Grey":            (128, 128, 128),  # noqa E501,E231,E201
        "HoneyDew":          (240, 255, 240), "HotPink":              (255, 105, 180), "IndianRed":       (205,  92,  92),  # noqa E501,E231,E201
        "Indigo":            ( 75,   0, 130), "Ivory":                (255, 255, 240), "Khaki":           (240, 230, 140),  # noqa E501,E231,E201
        "Lavender":          (230, 230, 250), "LavenderBlush":        (255, 240, 245), "LawnGreen":       (124, 252,   0),  # noqa E501,E231,E201
        "LemonChiffon":      (255, 250, 205), "LightBlue":            (173, 216, 230), "LightCoral":      (240, 128, 128),  # noqa E501,E231,E201
        "LightCyan":         (224, 255, 255), "LightGoldenRodYellow": (250, 250, 210), "LightGray":       (211, 211, 211),  # noqa E501,E231,E201
        "LightGreen":        (144, 238, 144), "LightGrey":            (211, 211, 211), "LightPink":       (255, 182, 193),  # noqa E501,E231,E201
        "LightSalmon":       (255, 160, 122), "LightSeaGreen":        ( 32, 178, 170), "LightSkyBlue":    (135, 206, 250),  # noqa E501,E231,E201
        "LightSlateGray":    (119, 136, 153), "LightSlateGrey":       (119, 136, 153), "LightSteelBlue":  (176, 196, 222),  # noqa E501,E231,E201
        "LightYellow":       (255, 255, 224), "Lime":                 (  0, 255,   0), "LimeGreen":       ( 50, 205,  50),  # noqa E501,E231,E201
        "Linen":             (250, 240, 230), "Magenta":              (255,   0, 255), "Maroon":          (128,   0,   0),  # noqa E501,E231,E201
        "MediumAquaMarine":  (102, 205, 170), "MediumBlue":           (  0,   0, 205), "MediumOrchid":    (186,  85, 211),  # noqa E501,E231,E201
        "MediumPurple":      (147, 112, 219), "MediumSeaGreen":       ( 60, 179, 113), "MediumSlateBlue": (123, 104, 238),  # noqa E501,E231,E201
        "MediumSpringGreen": (  0, 250, 154), "MediumTurquoise":      ( 72, 209, 204), "MediumVioletRed": (199,  21, 133),  # noqa E501,E231,E201
        "MidnightBlue":      ( 25,  25, 112), "MintCream":            (245, 255, 250), "MistyRose":       (255, 228, 225),  # noqa E501,E231,E201
        "Moccasin":          (255, 228, 181), "NavajoWhite":          (255, 222, 173), "Navy":            (  0,   0, 128),  # noqa E501,E231,E201
        "OldLace":           (253, 245, 230), "Olive":                (128, 128,   0), "OliveDrab":       (107, 142,  35),  # noqa E501,E231,E201
        "Orange":            (255, 165,   0), "OrangeRed":            (255,  69,   0), "Orchid":          (218, 112, 214),  # noqa E501,E231,E201
        "PaleGoldenRod":     (238, 232, 170), "PaleGreen":            (152, 251, 152), "PaleTurquoise":   (175, 238, 238),  # noqa E501,E231,E201
        "PaleVioletRed":     (219, 112, 147), "PapayaWhip":           (255, 239, 213), "PeachPuff":       (255, 218, 185),  # noqa E501,E231,E201
        "Peru":              (205, 133,  63), "Pink":                 (255, 192, 203), "Plum":            (221, 160, 221),  # noqa E501,E231,E201
        "PowderBlue":        (176, 224, 230), "Purple":               (128,   0, 128), "RebeccaPurple":   (102,  51, 153),  # noqa E501,E231,E201
        "Red":               (255,   0,   0), "RosyBrown":            (188, 143, 143), "RoyalBlue":       ( 65, 105, 225),  # noqa E501,E231,E201
        "SaddleBrown":       (139,  69,  19), "Salmon":               (250, 128, 114), "SandyBrown":      (244, 164,  96),  # noqa E501,E231,E201
        "SeaGreen":          ( 46, 139,  87), "SeaShell":             (255, 245, 238), "Sienna":          (160,  82,  45),  # noqa E501,E231,E201
        "Silver":            (192, 192, 192), "SkyBlue":              (135, 206, 235), "SlateBlue":       (106,  90, 205),  # noqa E501,E231,E201
        "SlateGray":         (112, 128, 144), "SlateGrey":            (112, 128, 144), "Snow":            (255, 250, 250),  # noqa E501,E231,E201
        "SpringGreen":       (  0, 255, 127), "SteelBlue":            ( 70, 130, 180), "Tan":             (210, 180, 140),  # noqa E501,E231,E201
        "Teal":              (  0, 128, 128), "Thistle":              (216, 191, 216), "Tomato":          (255,  99,  71),  # noqa E501,E231,E201
        "Turquoise":         ( 64, 224, 208), "Violet":               (238, 130, 238), "Wheat":           (245, 222, 179),  # noqa E501,E231,E201
        "White":             (255, 255, 255), "WhiteSmoke":           (245, 245, 245), "Yellow":          (255, 255,   0),  # noqa E501,E231,E201
        "YellowGreen":       (154, 205,  50)
    }


class Color(object):

    @classmethod
    def rgb2web(cls, rgbs):
        def conv(color):
            return "rgb(%d,%d,%d)" % color

        if isinstance(rgbs[0], (list, tuple)):
            return [conv(rgb) for rgb in rgbs]
        else:
            return conv(rgbs)

    @classmethod
    def rgba2web(cls, rgbs):
        def conv(color):
            return "rgba(%d,%d,%d,%f)" % color

        if isinstance(rgbs[0], (list, tuple)):
            return [conv(rgb) for rgb in rgbs]
        else:
            return conv(rgbs)

    @classmethod
    def rgb2str(cls, rgbs):
        def conv(color):
            return "%d,%d,%d" % color

        if isinstance(rgbs[0], (list, tuple)):
            return [conv(rgb) for rgb in rgbs]
        else:
            return conv(rgbs)

    @classmethod
    def web2rgba(cls, colors):

        def conv(color, ignoreAlpha=False):
            if color[0] == "#":
                if len(color) == 4:
                    rgba = (int(color[1:2] * 2, 16),
                            int(color[2:3] * 2, 16),
                            int(color[3:4] * 2, 16), 1.0)
                else:
                    rgba = (int(color[1:3], 16),
                            int(color[3:5], 16),
                            int(color[5:7], 16), 1.0)

            elif color.startswith("rgba"):
                r, g, b, a = color.replace(" ", "")[5:-1].split(",")
                rgba = (int(r), int(g), int(b), float(a))

            elif color.startswith("rgb"):
                r, g, b = color.replace(" ", "")[4:-1].split(",")
                rgba = (int(r), int(g), int(b), 1.0)

            elif WebColors.css3.get(color) is not None:
                rgba = WebColors.css3[color] + (1.0,)

            if ignoreAlpha:
                return rgba[:3]
            else:
                return rgba

        if isinstance(colors, (list, tuple)):
            return [conv(color) for color in colors]
        else:
            return conv(colors)

    @classmethod
    def rgbSpline(cls):
        def f(colors):
            r, g, b = [[c[i] for c in colors] for i in range(3)]
            f_r = spline(r)
            f_g = spline(g)
            f_b = spline(b)

            return lambda t: (int(f_r(t)), int(f_g(t)), int(f_b(t)))
        return f


class ColorBrewer(Color):
    """
    Source: http://colorbrewer2.org/#type=sequential&scheme=BuGn&n=3

    """
    divScheme = {
        "Spectral": [None, None, None,
            [(252,141, 89), (255,255,191), (153,213,148)],      # noqa E501,E231,E201
            [(215, 25, 28), (253,174, 97), (171,221,164), ( 43,131,186)],      # noqa E501,E231,E201
            [(215, 25, 28), (253,174, 97), (255,255,191), (171,221,164), ( 43,131,186)],      # noqa E501,E231,E201
            [(213, 62, 79), (252,141, 89), (254,224,139), (230,245,152), (153,213,148), ( 50,136,189)],      # noqa E501,E231,E201
            [(213, 62, 79), (252,141, 89), (254,224,139), (255,255,191), (230,245,152), (153,213,148), ( 50,136,189)],      # noqa E501,E231,E201
            [(213, 62, 79), (244,109, 67), (253,174, 97), (254,224,139), (230,245,152), (171,221,164), (102,194,165), ( 50,136,189)],      # noqa E501,E231,E201
            [(213, 62, 79), (244,109, 67), (253,174, 97), (254,224,139), (255,255,191), (230,245,152), (171,221,164), (102,194,165), ( 50,136,189)],      # noqa E501,E231,E201
            [(158,  1, 66), (213, 62, 79), (244,109, 67), (253,174, 97), (254,224,139), (230,245,152), (171,221,164), (102,194,165), ( 50,136,189), ( 94, 79,162)],      # noqa E501,E231,E201
            [(158,  1, 66), (213, 62, 79), (244,109, 67), (253,174, 97), (254,224,139), (255,255,191), (230,245,152), (171,221,164), (102,194,165), ( 50,136,189), ( 94, 79,162)]     # noqa E501,E231,E201
        ],
        "RdYlGn": [None, None, None,
            [(252,141, 89), (255,255,191), (145,207, 96)],      # noqa E501,E231,E201
            [(215, 25, 28), (253,174, 97), (166,217,106), ( 26,150, 65)],      # noqa E501,E231,E201
            [(215, 25, 28), (253,174, 97), (255,255,191), (166,217,106), ( 26,150, 65)],      # noqa E501,E231,E201
            [(215, 48, 39), (252,141, 89), (254,224,139), (217,239,139), (145,207, 96), ( 26,152, 80)],      # noqa E501,E231,E201
            [(215, 48, 39), (252,141, 89), (254,224,139), (255,255,191), (217,239,139), (145,207, 96), ( 26,152, 80)],      # noqa E501,E231,E201
            [(215, 48, 39), (244,109, 67), (253,174, 97), (254,224,139), (217,239,139), (166,217,106), (102,189, 99), ( 26,152, 80)],      # noqa E501,E231,E201
            [(215, 48, 39), (244,109, 67), (253,174, 97), (254,224,139), (255,255,191), (217,239,139), (166,217,106), (102,189, 99), ( 26,152, 80)],      # noqa E501,E231,E201
            [(165,  0, 38), (215, 48, 39), (244,109, 67), (253,174, 97), (254,224,139), (217,239,139), (166,217,106), (102,189, 99), ( 26,152, 80), (  0,104, 55)],      # noqa E501,E231,E201
            [(165,  0, 38), (215, 48, 39), (244,109, 67), (253,174, 97), (254,224,139), (255,255,191), (217,239,139), (166,217,106), (102,189, 99), ( 26,152, 80), (  0,104, 55)]     # noqa E501,E231,E201
        ],
        "RdBu": [None, None, None,
            [(239,138, 98), (247,247,247), (103,169,207)],      # noqa E501,E231,E201
            [(202,  0, 32), (244,165,130), (146,197,222), (  5,113,176)],      # noqa E501,E231,E201
            [(202,  0, 32), (244,165,130), (247,247,247), (146,197,222), (  5,113,176)],      # noqa E501,E231,E201
            [(178, 24, 43), (239,138, 98), (253,219,199), (209,229,240), (103,169,207), ( 33,102,172)],      # noqa E501,E231,E201
            [(178, 24, 43), (239,138, 98), (253,219,199), (247,247,247), (209,229,240), (103,169,207), ( 33,102,172)],      # noqa E501,E231,E201
            [(178, 24, 43), (214, 96, 77), (244,165,130), (253,219,199), (209,229,240), (146,197,222), ( 67,147,195), ( 33,102,172)],      # noqa E501,E231,E201
            [(178, 24, 43), (214, 96, 77), (244,165,130), (253,219,199), (247,247,247), (209,229,240), (146,197,222), ( 67,147,195), ( 33,102,172)],      # noqa E501,E231,E201
            [(103,  0, 31), (178, 24, 43), (214, 96, 77), (244,165,130), (253,219,199), (209,229,240), (146,197,222), ( 67,147,195), ( 33,102,172), (  5, 48, 97)],      # noqa E501,E231,E201
            [(103,  0, 31), (178, 24, 43), (214, 96, 77), (244,165,130), (253,219,199), (247,247,247), (209,229,240), (146,197,222), ( 67,147,195), ( 33,102,172), (  5, 48, 97)]     # noqa E501,E231,E201
        ],
        "PiYG": [None, None, None,
            [(233,163,201), (247,247,247), (161,215,106)],      # noqa E501,E231,E201
            [(208, 28,139), (241,182,218), (184,225,134), ( 77,172, 38)],      # noqa E501,E231,E201
            [(208, 28,139), (241,182,218), (247,247,247), (184,225,134), ( 77,172, 38)],      # noqa E501,E231,E201
            [(197, 27,125), (233,163,201), (253,224,239), (230,245,208), (161,215,106), ( 77,146, 33)],      # noqa E501,E231,E201
            [(197, 27,125), (233,163,201), (253,224,239), (247,247,247), (230,245,208), (161,215,106), ( 77,146, 33)],      # noqa E501,E231,E201
            [(197, 27,125), (222,119,174), (241,182,218), (253,224,239), (230,245,208), (184,225,134), (127,188, 65), ( 77,146, 33)],      # noqa E501,E231,E201
            [(197, 27,125), (222,119,174), (241,182,218), (253,224,239), (247,247,247), (230,245,208), (184,225,134), (127,188, 65), ( 77,146, 33)],      # noqa E501,E231,E201
            [(142,  1, 82), (197, 27,125), (222,119,174), (241,182,218), (253,224,239), (230,245,208), (184,225,134), (127,188, 65), ( 77,146, 33), ( 39,100, 25)],      # noqa E501,E231,E201
            [(142,  1, 82), (197, 27,125), (222,119,174), (241,182,218), (253,224,239), (247,247,247), (230,245,208), (184,225,134), (127,188, 65), ( 77,146, 33), ( 39,100, 25)]     # noqa E501,E231,E201
        ],
        "PRGn": [None, None, None,
            [(175,141,195), (247,247,247), (127,191,123)],      # noqa E501,E231,E201
            [(123, 50,148), (194,165,207), (166,219,160), (  0,136, 55)],      # noqa E501,E231,E201
            [(123, 50,148), (194,165,207), (247,247,247), (166,219,160), (  0,136, 55)],      # noqa E501,E231,E201
            [(118, 42,131), (175,141,195), (231,212,232), (217,240,211), (127,191,123), ( 27,120, 55)],      # noqa E501,E231,E201
            [(118, 42,131), (175,141,195), (231,212,232), (247,247,247), (217,240,211), (127,191,123), ( 27,120, 55)],      # noqa E501,E231,E201
            [(118, 42,131), (153,112,171), (194,165,207), (231,212,232), (217,240,211), (166,219,160), ( 90,174, 97), ( 27,120, 55)],      # noqa E501,E231,E201
            [(118, 42,131), (153,112,171), (194,165,207), (231,212,232), (247,247,247), (217,240,211), (166,219,160), ( 90,174, 97), ( 27,120, 55)],      # noqa E501,E231,E201
            [( 64,  0, 75), (118, 42,131), (153,112,171), (194,165,207), (231,212,232), (217,240,211), (166,219,160), ( 90,174, 97), ( 27,120, 55), (  0, 68, 27)],      # noqa E501,E231,E201
            [( 64,  0, 75), (118, 42,131), (153,112,171), (194,165,207), (231,212,232), (247,247,247), (217,240,211), (166,219,160), ( 90,174, 97), ( 27,120, 55), (  0, 68, 27)]     # noqa E501,E231,E201
        ],
        "RdYlBu": [None, None, None,
            [(252,141, 89), (255,255,191), (145,191,219)],      # noqa E501,E231,E201
            [(215, 25, 28), (253,174, 97), (171,217,233), ( 44,123,182)],      # noqa E501,E231,E201
            [(215, 25, 28), (253,174, 97), (255,255,191), (171,217,233), ( 44,123,182)],      # noqa E501,E231,E201
            [(215, 48, 39), (252,141, 89), (254,224,144), (224,243,248), (145,191,219), ( 69,117,180)],      # noqa E501,E231,E201
            [(215, 48, 39), (252,141, 89), (254,224,144), (255,255,191), (224,243,248), (145,191,219), ( 69,117,180)],      # noqa E501,E231,E201
            [(215, 48, 39), (244,109, 67), (253,174, 97), (254,224,144), (224,243,248), (171,217,233), (116,173,209), ( 69,117,180)],      # noqa E501,E231,E201
            [(215, 48, 39), (244,109, 67), (253,174, 97), (254,224,144), (255,255,191), (224,243,248), (171,217,233), (116,173,209), ( 69,117,180)],      # noqa E501,E231,E201
            [(165,  0, 38), (215, 48, 39), (244,109, 67), (253,174, 97), (254,224,144), (224,243,248), (171,217,233), (116,173,209), ( 69,117,180), ( 49, 54,149)],      # noqa E501,E231,E201
            [(165,  0, 38), (215, 48, 39), (244,109, 67), (253,174, 97), (254,224,144), (255,255,191), (224,243,248), (171,217,233), (116,173,209), ( 69,117,180), ( 49, 54,149)]     # noqa E501,E231,E201
        ],
        "BrBG": [None, None, None,
            [(216,179,101), (245,245,245), ( 90,180,172)],      # noqa E501,E231,E201
            [(166, 97, 26), (223,194,125), (128,205,193), (  1,133,113)],      # noqa E501,E231,E201
            [(166, 97, 26), (223,194,125), (245,245,245), (128,205,193), (  1,133,113)],      # noqa E501,E231,E201
            [(140, 81, 10), (216,179,101), (246,232,195), (199,234,229), ( 90,180,172), (  1,102, 94)],      # noqa E501,E231,E201
            [(140, 81, 10), (216,179,101), (246,232,195), (245,245,245), (199,234,229), ( 90,180,172), (  1,102, 94)],      # noqa E501,E231,E201
            [(140, 81, 10), (191,129, 45), (223,194,125), (246,232,195), (199,234,229), (128,205,193), ( 53,151,143), (  1,102, 94)],      # noqa E501,E231,E201
            [(140, 81, 10), (191,129, 45), (223,194,125), (246,232,195), (245,245,245), (199,234,229), (128,205,193), ( 53,151,143), (  1,102, 94)],      # noqa E501,E231,E201
            [( 84, 48,  5), (140, 81, 10), (191,129, 45), (223,194,125), (246,232,195), (199,234,229), (128,205,193), ( 53,151,143), (  1,102, 94), (  0, 60, 48)],      # noqa E501,E231,E201
            [( 84, 48,  5), (140, 81, 10), (191,129, 45), (223,194,125), (246,232,195), (245,245,245), (199,234,229), (128,205,193), ( 53,151,143), (  1,102, 94), (  0, 60, 48)]     # noqa E501,E231,E201
        ],
        "RdGy": [None, None, None,
            [(239,138, 98), (255,255,255), (153,153,153)],      # noqa E501,E231,E201
            [(202,  0, 32), (244,165,130), (186,186,186), ( 64, 64, 64)],      # noqa E501,E231,E201
            [(202,  0, 32), (244,165,130), (255,255,255), (186,186,186), ( 64, 64, 64)],      # noqa E501,E231,E201
            [(178, 24, 43), (239,138, 98), (253,219,199), (224,224,224), (153,153,153), ( 77, 77, 77)],      # noqa E501,E231,E201
            [(178, 24, 43), (239,138, 98), (253,219,199), (255,255,255), (224,224,224), (153,153,153), ( 77, 77, 77)],      # noqa E501,E231,E201
            [(178, 24, 43), (214, 96, 77), (244,165,130), (253,219,199), (224,224,224), (186,186,186), (135,135,135), ( 77, 77, 77)],      # noqa E501,E231,E201
            [(178, 24, 43), (214, 96, 77), (244,165,130), (253,219,199), (255,255,255), (224,224,224), (186,186,186), (135,135,135), ( 77, 77, 77)],      # noqa E501,E231,E201
            [(103,  0, 31), (178, 24, 43), (214, 96, 77), (244,165,130), (253,219,199), (224,224,224), (186,186,186), (135,135,135), ( 77, 77, 77), ( 26, 26, 26)],      # noqa E501,E231,E201
            [(103,  0, 31), (178, 24, 43), (214, 96, 77), (244,165,130), (253,219,199), (255,255,255), (224,224,224), (186,186,186), (135,135,135), ( 77, 77, 77), ( 26, 26, 26)]     # noqa E501,E231,E201
        ],
        "PuOr": [None, None, None,
            [(241,163, 64), (247,247,247), (153,142,195)],      # noqa E501,E231,E201
            [(230, 97,  1), (253,184, 99), (178,171,210), ( 94, 60,153)],      # noqa E501,E231,E201
            [(230, 97,  1), (253,184, 99), (247,247,247), (178,171,210), ( 94, 60,153)],      # noqa E501,E231,E201
            [(179, 88,  6), (241,163, 64), (254,224,182), (216,218,235), (153,142,195), ( 84, 39,136)],      # noqa E501,E231,E201
            [(179, 88,  6), (241,163, 64), (254,224,182), (247,247,247), (216,218,235), (153,142,195), ( 84, 39,136)],      # noqa E501,E231,E201
            [(179, 88,  6), (224,130, 20), (253,184, 99), (254,224,182), (216,218,235), (178,171,210), (128,115,172), ( 84, 39,136)],      # noqa E501,E231,E201
            [(179, 88,  6), (224,130, 20), (253,184, 99), (254,224,182), (247,247,247), (216,218,235), (178,171,210), (128,115,172), ( 84, 39,136)],      # noqa E501,E231,E201
            [(127, 59,  8), (179, 88,  6), (224,130, 20), (253,184, 99), (254,224,182), (216,218,235), (178,171,210), (128,115,172), ( 84, 39,136), ( 45,  0, 75)],      # noqa E501,E231,E201
            [(127, 59,  8), (179, 88,  6), (224,130, 20), (253,184, 99), (254,224,182), (247,247,247), (216,218,235), (178,171,210), (128,115,172), ( 84, 39,136), ( 45,  0, 75)]     # noqa E501,E231,E201
        ]
    }

    qualScheme = {
        "Accent": [None, None, None,
            [(127,201,127), (190,174,212), (253,192,134)],      # noqa E501,E231,E201
            [(127,201,127), (190,174,212), (253,192,134), (255,255,153)],      # noqa E501,E231,E201
            [(127,201,127), (190,174,212), (253,192,134), (255,255,153), ( 56,108,176)],      # noqa E501,E231,E201
            [(127,201,127), (190,174,212), (253,192,134), (255,255,153), ( 56,108,176), (240,  2,127)],      # noqa E501,E231,E201
            [(127,201,127), (190,174,212), (253,192,134), (255,255,153), ( 56,108,176), (240,  2,127), (191, 91, 23)],      # noqa E501,E231,E201
            [(127,201,127), (190,174,212), (253,192,134), (255,255,153), ( 56,108,176), (240,  2,127), (191, 91, 23), (102,102,102)]     # noqa E501,E231,E201
         ],
        "Set1": [None, None, None,
            [(228, 26, 28), ( 55,126,184), ( 77,175, 74)],      # noqa E501,E231,E201
            [(228, 26, 28), ( 55,126,184), ( 77,175, 74), (152, 78,163)],      # noqa E501,E231,E201
            [(228, 26, 28), ( 55,126,184), ( 77,175, 74), (152, 78,163), (255,127,  0)],      # noqa E501,E231,E201
            [(228, 26, 28), ( 55,126,184), ( 77,175, 74), (152, 78,163), (255,127,  0), (255,255, 51)],      # noqa E501,E231,E201
            [(228, 26, 28), ( 55,126,184), ( 77,175, 74), (152, 78,163), (255,127,  0), (255,255, 51), (166, 86, 40)],      # noqa E501,E231,E201
            [(228, 26, 28), ( 55,126,184), ( 77,175, 74), (152, 78,163), (255,127,  0), (255,255, 51), (166, 86, 40), (247,129,191)],      # noqa E501,E231,E201
            [(228, 26, 28), ( 55,126,184), ( 77,175, 74), (152, 78,163), (255,127,  0), (255,255, 51), (166, 86, 40), (247,129,191), (153,153,153)]     # noqa E501,E231,E201
         ],
        "Set2": [None, None, None,
            [(102,194,165), (252,141, 98), (141,160,203)],      # noqa E501,E231,E201
            [(102,194,165), (252,141, 98), (141,160,203), (231,138,195)],      # noqa E501,E231,E201
            [(102,194,165), (252,141, 98), (141,160,203), (231,138,195), (166,216, 84)],      # noqa E501,E231,E201
            [(102,194,165), (252,141, 98), (141,160,203), (231,138,195), (166,216, 84), (255,217, 47)],      # noqa E501,E231,E201
            [(102,194,165), (252,141, 98), (141,160,203), (231,138,195), (166,216, 84), (255,217, 47), (229,196,148)],      # noqa E501,E231,E201
            [(102,194,165), (252,141, 98), (141,160,203), (231,138,195), (166,216, 84), (255,217, 47), (229,196,148), (179,179,179)]     # noqa E501,E231,E201
         ],
        "Set3": [None, None, None,
            [(141,211,199), (255,255,179), (190,186,218)],      # noqa E501,E231,E201
            [(141,211,199), (255,255,179), (190,186,218), (251,128,114)],      # noqa E501,E231,E201
            [(141,211,199), (255,255,179), (190,186,218), (251,128,114), (128,177,211)],      # noqa E501,E231,E201
            [(141,211,199), (255,255,179), (190,186,218), (251,128,114), (128,177,211), (253,180, 98)],      # noqa E501,E231,E201
            [(141,211,199), (255,255,179), (190,186,218), (251,128,114), (128,177,211), (253,180, 98), (179,222,105)],      # noqa E501,E231,E201
            [(141,211,199), (255,255,179), (190,186,218), (251,128,114), (128,177,211), (253,180, 98), (179,222,105), (252,205,229)],      # noqa E501,E231,E201
            [(141,211,199), (255,255,179), (190,186,218), (251,128,114), (128,177,211), (253,180, 98), (179,222,105), (252,205,229), (217,217,217)],      # noqa E501,E231,E201
            [(141,211,199), (255,255,179), (190,186,218), (251,128,114), (128,177,211), (253,180, 98), (179,222,105), (252,205,229), (217,217,217), (188,128,189)],      # noqa E501,E231,E201
            [(141,211,199), (255,255,179), (190,186,218), (251,128,114), (128,177,211), (253,180, 98), (179,222,105), (252,205,229), (217,217,217), (188,128,189), (204,235,197)],      # noqa E501,E231,E201
            [(141,211,199), (255,255,179), (190,186,218), (251,128,114), (128,177,211), (253,180, 98), (179,222,105), (252,205,229), (217,217,217), (188,128,189), (204,235,197), (255,237,111)]     # noqa E501,E231,E201
        ],
        "Dark2": [None, None, None,
            [( 27,158,119), (217, 95,  2), (117,112,179)],      # noqa E501,E231,E201
            [( 27,158,119), (217, 95,  2), (117,112,179), (231, 41,138)],      # noqa E501,E231,E201
            [( 27,158,119), (217, 95,  2), (117,112,179), (231, 41,138), (102,166, 30)],      # noqa E501,E231,E201
            [( 27,158,119), (217, 95,  2), (117,112,179), (231, 41,138), (102,166, 30), (230,171,  2)],      # noqa E501,E231,E201
            [( 27,158,119), (217, 95,  2), (117,112,179), (231, 41,138), (102,166, 30), (230,171,  2), (166,118, 29)],      # noqa E501,E231,E201
            [( 27,158,119), (217, 95,  2), (117,112,179), (231, 41,138), (102,166, 30), (230,171,  2), (166,118, 29), (102,102,102)]     # noqa E501,E231,E201
         ],
        "Paired": [None, None, None,
            [(166,206,227), ( 31,120,180), (178,223,138)],      # noqa E501,E231,E201
            [(166,206,227), ( 31,120,180), (178,223,138), ( 51,160, 44)],      # noqa E501,E231,E201
            [(166,206,227), ( 31,120,180), (178,223,138), ( 51,160, 44), (251,154,153)],      # noqa E501,E231,E201
            [(166,206,227), ( 31,120,180), (178,223,138), ( 51,160, 44), (251,154,153), (227, 26, 28)],      # noqa E501,E231,E201
            [(166,206,227), ( 31,120,180), (178,223,138), ( 51,160, 44), (251,154,153), (227, 26, 28), (253,191,111)],      # noqa E501,E231,E201
            [(166,206,227), ( 31,120,180), (178,223,138), ( 51,160, 44), (251,154,153), (227, 26, 28), (253,191,111), (255,127,  0)],      # noqa E501,E231,E201
            [(166,206,227), ( 31,120,180), (178,223,138), ( 51,160, 44), (251,154,153), (227, 26, 28), (253,191,111), (255,127,  0), (202,178,214)],      # noqa E501,E231,E201
            [(166,206,227), ( 31,120,180), (178,223,138), ( 51,160, 44), (251,154,153), (227, 26, 28), (253,191,111), (255,127,  0), (202,178,214), (106, 61,154)],      # noqa E501,E231,E201
            [(166,206,227), ( 31,120,180), (178,223,138), ( 51,160, 44), (251,154,153), (227, 26, 28), (253,191,111), (255,127,  0), (202,178,214), (106, 61,154), (255,255,153)],      # noqa E501,E231,E201
            [(166,206,227), ( 31,120,180), (178,223,138), ( 51,160, 44), (251,154,153), (227, 26, 28), (253,191,111), (255,127,  0), (202,178,214), (106, 61,154), (255,255,153), (177, 89, 40)]     # noqa E501,E231,E201
        ],
        "Pastel1": [None, None, None,
            [(251,180,174), (179,205,227), (204,235,197)],      # noqa E501,E231,E201
            [(251,180,174), (179,205,227), (204,235,197), (222,203,228)],      # noqa E501,E231,E201
            [(251,180,174), (179,205,227), (204,235,197), (222,203,228), (254,217,166)],      # noqa E501,E231,E201
            [(251,180,174), (179,205,227), (204,235,197), (222,203,228), (254,217,166), (255,255,204)],      # noqa E501,E231,E201
            [(251,180,174), (179,205,227), (204,235,197), (222,203,228), (254,217,166), (255,255,204), (229,216,189)],      # noqa E501,E231,E201
            [(251,180,174), (179,205,227), (204,235,197), (222,203,228), (254,217,166), (255,255,204), (229,216,189), (253,218,236)],      # noqa E501,E231,E201
            [(251,180,174), (179,205,227), (204,235,197), (222,203,228), (254,217,166), (255,255,204), (229,216,189), (253,218,236), (242,242,242)]     # noqa E501,E231,E201
         ],
        "Pastel2": [None, None, None,
            [(179,226,205), (253,205,172), (203,213,232)],      # noqa E501,E231,E201
            [(179,226,205), (253,205,172), (203,213,232), (244,202,228)],      # noqa E501,E231,E201
            [(179,226,205), (253,205,172), (203,213,232), (244,202,228), (230,245,201)],      # noqa E501,E231,E201
            [(179,226,205), (253,205,172), (203,213,232), (244,202,228), (230,245,201), (255,242,174)],      # noqa E501,E231,E201
            [(179,226,205), (253,205,172), (203,213,232), (244,202,228), (230,245,201), (255,242,174), (241,226,204)],      # noqa E501,E231,E201
            [(179,226,205), (253,205,172), (203,213,232), (244,202,228), (230,245,201), (255,242,174), (241,226,204), (204,204,204)]     # noqa E501,E231,E201
         ]
    }

    seqScheme = {
        "OrRd": [None, None, None,
            [(254,232,200), (253,187,132), (227, 74, 51)],      # noqa E501,E231,E201
            [(254,240,217), (253,204,138), (252,141, 89), (215, 48, 31)],      # noqa E501,E231,E201
            [(254,240,217), (253,204,138), (252,141, 89), (227, 74, 51), (179,  0,  0)],      # noqa E501,E231,E201
            [(254,240,217), (253,212,158), (253,187,132), (252,141, 89), (227, 74, 51), (179,  0,  0)],      # noqa E501,E231,E201
            [(254,240,217), (253,212,158), (253,187,132), (252,141, 89), (239,101, 72), (215, 48, 31), (153,  0,  0)],      # noqa E501,E231,E201
            [(255,247,236), (254,232,200), (253,212,158), (253,187,132), (252,141, 89), (239,101, 72), (215, 48, 31), (153,  0,  0)],      # noqa E501,E231,E201
            [(255,247,236), (254,232,200), (253,212,158), (253,187,132), (252,141, 89), (239,101, 72), (215, 48, 31), (179,  0,  0), (127,  0,  0)]     # noqa E501,E231,E201
         ],
        "PuBu": [None, None, None,
            [(236,231,242), (166,189,219), ( 43,140,190)],      # noqa E501,E231,E201
            [(241,238,246), (189,201,225), (116,169,207), (  5,112,176)],      # noqa E501,E231,E201
            [(241,238,246), (189,201,225), (116,169,207), ( 43,140,190), (  4, 90,141)],      # noqa E501,E231,E201
            [(241,238,246), (208,209,230), (166,189,219), (116,169,207), ( 43,140,190), (  4, 90,141)],      # noqa E501,E231,E201
            [(241,238,246), (208,209,230), (166,189,219), (116,169,207), ( 54,144,192), (  5,112,176), (  3, 78,123)],      # noqa E501,E231,E201
            [(255,247,251), (236,231,242), (208,209,230), (166,189,219), (116,169,207), ( 54,144,192), (  5,112,176), (  3, 78,123)],      # noqa E501,E231,E201
            [(255,247,251), (236,231,242), (208,209,230), (166,189,219), (116,169,207), ( 54,144,192), (  5,112,176), (  4, 90,141), (  2, 56, 88)]     # noqa E501,E231,E201
         ],
        "BuPu": [None, None, None,
            [(224,236,244), (158,188,218), (136, 86,167)],      # noqa E501,E231,E201
            [(237,248,251), (179,205,227), (140,150,198), (136, 65,157)],      # noqa E501,E231,E201
            [(237,248,251), (179,205,227), (140,150,198), (136, 86,167), (129, 15,124)],      # noqa E501,E231,E201
            [(237,248,251), (191,211,230), (158,188,218), (140,150,198), (136, 86,167), (129, 15,124)],      # noqa E501,E231,E201
            [(237,248,251), (191,211,230), (158,188,218), (140,150,198), (140,107,177), (136, 65,157), (110,  1,107)],      # noqa E501,E231,E201
            [(247,252,253), (224,236,244), (191,211,230), (158,188,218), (140,150,198), (140,107,177), (136, 65,157), (110,  1,107)],      # noqa E501,E231,E201
            [(247,252,253), (224,236,244), (191,211,230), (158,188,218), (140,150,198), (140,107,177), (136, 65,157), (129, 15,124), ( 77,  0, 75)]     # noqa E501,E231,E201
         ],
        "Oranges": [None, None, None,
            [(254,230,206), (253,174,107), (230, 85, 13)],      # noqa E501,E231,E201
            [(254,237,222), (253,190,133), (253,141, 60), (217, 71,  1)],      # noqa E501,E231,E201
            [(254,237,222), (253,190,133), (253,141, 60), (230, 85, 13), (166, 54,  3)],      # noqa E501,E231,E201
            [(254,237,222), (253,208,162), (253,174,107), (253,141, 60), (230, 85, 13), (166, 54,  3)],      # noqa E501,E231,E201
            [(254,237,222), (253,208,162), (253,174,107), (253,141, 60), (241,105, 19), (217, 72,  1), (140, 45,  4)],      # noqa E501,E231,E201
            [(255,245,235), (254,230,206), (253,208,162), (253,174,107), (253,141, 60), (241,105, 19), (217, 72,  1), (140, 45,  4)],      # noqa E501,E231,E201
            [(255,245,235), (254,230,206), (253,208,162), (253,174,107), (253,141, 60), (241,105, 19), (217, 72,  1), (166, 54,  3), (127, 39,  4)]     # noqa E501,E231,E201
         ],
        "BuGn": [None, None, None,
            [(229,245,249), (153,216,201), ( 44,162, 95)],      # noqa E501,E231,E201
            [(237,248,251), (178,226,226), (102,194,164), ( 35,139, 69)],      # noqa E501,E231,E201
            [(237,248,251), (178,226,226), (102,194,164), ( 44,162, 95), (  0,109, 44)],      # noqa E501,E231,E201
            [(237,248,251), (204,236,230), (153,216,201), (102,194,164), ( 44,162, 95), (  0,109, 44)],      # noqa E501,E231,E201
            [(237,248,251), (204,236,230), (153,216,201), (102,194,164), ( 65,174,118), ( 35,139, 69), (  0, 88, 36)],      # noqa E501,E231,E201
            [(247,252,253), (229,245,249), (204,236,230), (153,216,201), (102,194,164), ( 65,174,118), ( 35,139, 69), (  0, 88, 36)],      # noqa E501,E231,E201
            [(247,252,253), (229,245,249), (204,236,230), (153,216,201), (102,194,164), ( 65,174,118), ( 35,139, 69), (  0,109, 44), (  0, 68, 27)]     # noqa E501,E231,E201
         ],
        "YlOrBr": [None, None, None,
            [(255,247,188), (254,196, 79), (217, 95, 14)],      # noqa E501,E231,E201
            [(255,255,212), (254,217,142), (254,153, 41), (204, 76,  2)],      # noqa E501,E231,E201
            [(255,255,212), (254,217,142), (254,153, 41), (217, 95, 14), (153, 52,  4)],      # noqa E501,E231,E201
            [(255,255,212), (254,227,145), (254,196, 79), (254,153, 41), (217, 95, 14), (153, 52,  4)],      # noqa E501,E231,E201
            [(255,255,212), (254,227,145), (254,196, 79), (254,153, 41), (236,112, 20), (204, 76,  2), (140, 45,  4)],      # noqa E501,E231,E201
            [(255,255,229), (255,247,188), (254,227,145), (254,196, 79), (254,153, 41), (236,112, 20), (204, 76,  2), (140, 45,  4)],      # noqa E501,E231,E201
            [(255,255,229), (255,247,188), (254,227,145), (254,196, 79), (254,153, 41), (236,112, 20), (204, 76,  2), (153, 52,  4), (102, 37,  6)]     # noqa E501,E231,E201
         ],
        "YlGn": [None, None, None,
            [(247,252,185), (173,221,142), ( 49,163, 84)],      # noqa E501,E231,E201
            [(255,255,204), (194,230,153), (120,198,121), ( 35,132, 67)],      # noqa E501,E231,E201
            [(255,255,204), (194,230,153), (120,198,121), ( 49,163, 84), (  0,104, 55)],      # noqa E501,E231,E201
            [(255,255,204), (217,240,163), (173,221,142), (120,198,121), ( 49,163, 84), (  0,104, 55)],      # noqa E501,E231,E201
            [(255,255,204), (217,240,163), (173,221,142), (120,198,121), ( 65,171, 93), ( 35,132, 67), (  0, 90, 50)],      # noqa E501,E231,E201
            [(255,255,229), (247,252,185), (217,240,163), (173,221,142), (120,198,121), ( 65,171, 93), ( 35,132, 67), (  0, 90, 50)],      # noqa E501,E231,E201
            [(255,255,229), (247,252,185), (217,240,163), (173,221,142), (120,198,121), ( 65,171, 93), ( 35,132, 67), (  0,104, 55), (  0, 69, 41)]     # noqa E501,E231,E201
         ],
        "Reds": [None, None, None,
            [(254,224,210), (252,146,114), (222, 45, 38)],      # noqa E501,E231,E201
            [(254,229,217), (252,174,145), (251,106, 74), (203, 24, 29)],      # noqa E501,E231,E201
            [(254,229,217), (252,174,145), (251,106, 74), (222, 45, 38), (165, 15, 21)],      # noqa E501,E231,E201
            [(254,229,217), (252,187,161), (252,146,114), (251,106, 74), (222, 45, 38), (165, 15, 21)],      # noqa E501,E231,E201
            [(254,229,217), (252,187,161), (252,146,114), (251,106, 74), (239, 59, 44), (203, 24, 29), (153,  0, 13)],      # noqa E501,E231,E201
            [(255,245,240), (254,224,210), (252,187,161), (252,146,114), (251,106, 74), (239, 59, 44), (203, 24, 29), (153,  0, 13)],      # noqa E501,E231,E201
            [(255,245,240), (254,224,210), (252,187,161), (252,146,114), (251,106, 74), (239, 59, 44), (203, 24, 29), (165, 15, 21), (103,  0, 13)]     # noqa E501,E231,E201
         ],
        "RdPu": [None, None, None,
            [(253,224,221), (250,159,181), (197, 27,138)],      # noqa E501,E231,E201
            [(254,235,226), (251,180,185), (247,104,161), (174,  1,126)],      # noqa E501,E231,E201
            [(254,235,226), (251,180,185), (247,104,161), (197, 27,138), (122,  1,119)],      # noqa E501,E231,E201
            [(254,235,226), (252,197,192), (250,159,181), (247,104,161), (197, 27,138), (122,  1,119)],      # noqa E501,E231,E201
            [(254,235,226), (252,197,192), (250,159,181), (247,104,161), (221, 52,151), (174,  1,126), (122,  1,119)],      # noqa E501,E231,E201
            [(255,247,243), (253,224,221), (252,197,192), (250,159,181), (247,104,161), (221, 52,151), (174,  1,126), (122,  1,119)],      # noqa E501,E231,E201
            [(255,247,243), (253,224,221), (252,197,192), (250,159,181), (247,104,161), (221, 52,151), (174,  1,126), (122,  1,119), ( 73,  0,106)]     # noqa E501,E231,E201
         ],
        "Greens": [None, None, None,
            [(229,245,224), (161,217,155), ( 49,163, 84)],      # noqa E501,E231,E201
            [(237,248,233), (186,228,179), (116,196,118), ( 35,139, 69)],      # noqa E501,E231,E201
            [(237,248,233), (186,228,179), (116,196,118), ( 49,163, 84), (  0,109, 44)],      # noqa E501,E231,E201
            [(237,248,233), (199,233,192), (161,217,155), (116,196,118), ( 49,163, 84), (  0,109, 44)],      # noqa E501,E231,E201
            [(237,248,233), (199,233,192), (161,217,155), (116,196,118), ( 65,171, 93), ( 35,139, 69), (  0, 90, 50)],      # noqa E501,E231,E201
            [(247,252,245), (229,245,224), (199,233,192), (161,217,155), (116,196,118), ( 65,171, 93), ( 35,139, 69), (  0, 90, 50)],      # noqa E501,E231,E201
            [(247,252,245), (229,245,224), (199,233,192), (161,217,155), (116,196,118), ( 65,171, 93), ( 35,139, 69), (  0,109, 44), (  0, 68, 27)]     # noqa E501,E231,E201
         ],
        "YlGnBu": [None, None, None,
            [(237,248,177), (127,205,187), ( 44,127,184)],      # noqa E501,E231,E201
            [(255,255,204), (161,218,180), ( 65,182,196), ( 34, 94,168)],      # noqa E501,E231,E201
            [(255,255,204), (161,218,180), ( 65,182,196), ( 44,127,184), ( 37, 52,148)],      # noqa E501,E231,E201
            [(255,255,204), (199,233,180), (127,205,187), ( 65,182,196), ( 44,127,184), ( 37, 52,148)],      # noqa E501,E231,E201
            [(255,255,204), (199,233,180), (127,205,187), ( 65,182,196), ( 29,145,192), ( 34, 94,168), ( 12, 44,132)],      # noqa E501,E231,E201
            [(255,255,217), (237,248,177), (199,233,180), (127,205,187), ( 65,182,196), ( 29,145,192), ( 34, 94,168), ( 12, 44,132)],      # noqa E501,E231,E201
            [(255,255,217), (237,248,177), (199,233,180), (127,205,187), ( 65,182,196), ( 29,145,192), ( 34, 94,168), ( 37, 52,148), (  8, 29, 88)]     # noqa E501,E231,E201
         ],
        "Purples": [None, None, None,
            [(239,237,245), (188,189,220), (117,107,177)],      # noqa E501,E231,E201
            [(242,240,247), (203,201,226), (158,154,200), (106, 81,163)],      # noqa E501,E231,E201
            [(242,240,247), (203,201,226), (158,154,200), (117,107,177), ( 84, 39,143)],      # noqa E501,E231,E201
            [(242,240,247), (218,218,235), (188,189,220), (158,154,200), (117,107,177), ( 84, 39,143)],      # noqa E501,E231,E201
            [(242,240,247), (218,218,235), (188,189,220), (158,154,200), (128,125,186), (106, 81,163), ( 74, 20,134)],      # noqa E501,E231,E201
            [(252,251,253), (239,237,245), (218,218,235), (188,189,220), (158,154,200), (128,125,186), (106, 81,163), ( 74, 20,134)],      # noqa E501,E231,E201
            [(252,251,253), (239,237,245), (218,218,235), (188,189,220), (158,154,200), (128,125,186), (106, 81,163), ( 84, 39,143), ( 63,  0,125)]     # noqa E501,E231,E201
         ],
        "GnBu": [None, None, None,
            [(224,243,219), (168,221,181), ( 67,162,202)],      # noqa E501,E231,E201
            [(240,249,232), (186,228,188), (123,204,196), ( 43,140,190)],      # noqa E501,E231,E201
            [(240,249,232), (186,228,188), (123,204,196), ( 67,162,202), (  8,104,172)],      # noqa E501,E231,E201
            [(240,249,232), (204,235,197), (168,221,181), (123,204,196), ( 67,162,202), (  8,104,172)],      # noqa E501,E231,E201
            [(240,249,232), (204,235,197), (168,221,181), (123,204,196), ( 78,179,211), ( 43,140,190), (  8, 88,158)],      # noqa E501,E231,E201
            [(247,252,240), (224,243,219), (204,235,197), (168,221,181), (123,204,196), ( 78,179,211), ( 43,140,190), (  8, 88,158)],      # noqa E501,E231,E201
            [(247,252,240), (224,243,219), (204,235,197), (168,221,181), (123,204,196), ( 78,179,211), ( 43,140,190), (  8,104,172), (  8, 64,129)]     # noqa E501,E231,E201
         ],
        "Greys": [None, None, None,
            [(240,240,240), (189,189,189), ( 99, 99, 99)],      # noqa E501,E231,E201
            [(247,247,247), (204,204,204), (150,150,150), ( 82, 82, 82)],      # noqa E501,E231,E201
            [(247,247,247), (204,204,204), (150,150,150), ( 99, 99, 99), ( 37, 37, 37)],      # noqa E501,E231,E201
            [(247,247,247), (217,217,217), (189,189,189), (150,150,150), ( 99, 99, 99), ( 37, 37, 37)],      # noqa E501,E231,E201
            [(247,247,247), (217,217,217), (189,189,189), (150,150,150), (115,115,115), ( 82, 82, 82), ( 37, 37, 37)],      # noqa E501,E231,E201
            [(255,255,255), (240,240,240), (217,217,217), (189,189,189), (150,150,150), (115,115,115), ( 82, 82, 82), ( 37, 37, 37)],      # noqa E501,E231,E201
            [(255,255,255), (240,240,240), (217,217,217), (189,189,189), (150,150,150), (115,115,115), ( 82, 82, 82), ( 37, 37, 37), (  0,  0,  0)]     # noqa E501,E231,E201
         ],
        "YlOrRd": [None, None, None,
            [(255,237,160), (254,178, 76), (240, 59, 32)],      # noqa E501,E231,E201
            [(255,255,178), (254,204, 92), (253,141, 60), (227, 26, 28)],      # noqa E501,E231,E201
            [(255,255,178), (254,204, 92), (253,141, 60), (240, 59, 32), (189,  0, 38)],      # noqa E501,E231,E201
            [(255,255,178), (254,217,118), (254,178, 76), (253,141, 60), (240, 59, 32), (189,  0, 38)],      # noqa E501,E231,E201
            [(255,255,178), (254,217,118), (254,178, 76), (253,141, 60), (252, 78, 42), (227, 26, 28), (177,  0, 38)],      # noqa E501,E231,E201
            [(255,255,204), (255,237,160), (254,217,118), (254,178, 76), (253,141, 60), (252, 78, 42), (227, 26, 28), (177,  0, 38)]     # noqa E501,E231,E201
         ],
        "PuRd": [None, None, None,
            [(231,225,239), (201,148,199), (221, 28,119)],      # noqa E501,E231,E201
            [(241,238,246), (215,181,216), (223,101,176), (206, 18, 86)],      # noqa E501,E231,E201
            [(241,238,246), (215,181,216), (223,101,176), (221, 28,119), (152,  0, 67)],      # noqa E501,E231,E201
            [(241,238,246), (212,185,218), (201,148,199), (223,101,176), (221, 28,119), (152,  0, 67)],      # noqa E501,E231,E201
            [(241,238,246), (212,185,218), (201,148,199), (223,101,176), (231, 41,138), (206, 18, 86), (145,  0, 63)],      # noqa E501,E231,E201
            [(247,244,249), (231,225,239), (212,185,218), (201,148,199), (223,101,176), (231, 41,138), (206, 18, 86), (145,  0, 63)],      # noqa E501,E231,E201
            [(247,244,249), (231,225,239), (212,185,218), (201,148,199), (223,101,176), (231, 41,138), (206, 18, 86), (152,  0, 67), (103,  0, 31)]     # noqa E501,E231,E201
         ],
        "Blues": [None, None, None,
            [(222,235,247), (158,202,225), ( 49,130,189)],      # noqa E501,E231,E201
            [(239,243,255), (189,215,231), (107,174,214), ( 33,113,181)],      # noqa E501,E231,E201
            [(239,243,255), (189,215,231), (107,174,214), ( 49,130,189), (  8, 81,156)],      # noqa E501,E231,E201
            [(239,243,255), (198,219,239), (158,202,225), (107,174,214), ( 49,130,189), (  8, 81,156)],      # noqa E501,E231,E201
            [(239,243,255), (198,219,239), (158,202,225), (107,174,214), ( 66,146,198), ( 33,113,181), (  8, 69,148)],      # noqa E501,E231,E201
            [(247,251,255), (222,235,247), (198,219,239), (158,202,225), (107,174,214), ( 66,146,198), ( 33,113,181), (  8, 69,148)],      # noqa E501,E231,E201
            [(247,251,255), (222,235,247), (198,219,239), (158,202,225), (107,174,214), ( 66,146,198), ( 33,113,181), (  8, 81,156), (  8, 48,107)]     # noqa E501,E231,E201
         ],
        "PuBuGn": [None, None, None,
            [(236,226,240), (166,189,219), ( 28,144,153)],      # noqa E501,E231,E201
            [(246,239,247), (189,201,225), (103,169,207), (  2,129,138)],      # noqa E501,E231,E201
            [(246,239,247), (189,201,225), (103,169,207), ( 28,144,153), (  1,108, 89)],      # noqa E501,E231,E201
            [(246,239,247), (208,209,230), (166,189,219), (103,169,207), ( 28,144,153), (  1,108, 89)],      # noqa E501,E231,E201
            [(246,239,247), (208,209,230), (166,189,219), (103,169,207), ( 54,144,192), (  2,129,138), (  1,100, 80)],      # noqa E501,E231,E201
            [(255,247,251), (236,226,240), (208,209,230), (166,189,219), (103,169,207), ( 54,144,192), (  2,129,138), (  1,100, 80)],      # noqa E501,E231,E201
            [(255,247,251), (236,226,240), (208,209,230), (166,189,219), (103,169,207), ( 54,144,192), (  2,129,138), (  1,108, 89), (  1, 70, 54)]     # noqa E501,E231,E201
         ]
    }

    @classmethod
    def _interpolate(cls, scheme, color, array):
        colors = scheme.get(color)[-1]
        f = cls.rgbSpline()(colors)
        return [f(a) for a in array]

    @classmethod
    def _get(cls, scheme, color, size):
        colors = scheme.get(color)
        if colors is None:
            return []
        elif size is None:
            return colors
        elif size == -1:
            return colors[-1]
        elif size < 3:
            return colors[3][:size]
        elif size < len(colors):
            return colors[size]
        else:
            print("Warning: size too large for scheme, stacking largest color list to match size")
            colors = colors[-1]
            factor = math.ceil(size / (len(colors) - 3))
            return (colors * factor)[:size]

    @classmethod
    def div(cls, color, discrete, size=None, array=None):
        if discrete:
            return ColorBrewer._get(ColorBrewer.divScheme, color, size)
        else:
            return ColorBrewer._interpolate(ColorBrewer.divScheme, color, array)

    @classmethod
    def seq(cls, color, discrete, size=None, array=None):
        if discrete:
            return ColorBrewer._get(ColorBrewer.seqScheme, color, size)
        else:
            return ColorBrewer._interpolate(ColorBrewer.seqScheme, color, array)

    @classmethod
    def qual(cls, color, size=None):
        return ColorBrewer._get(ColorBrewer.qualScheme, color, size)


class D3Colors(Color):
    """
    Source: http://d3js.org
    """
    categorialScheme = {
        "c10":  [( 31,119,180), (255,127, 14), ( 44,160, 44), (214, 39, 40), (148,103,189), (140, 86, 75), (227,119,194), (127,127,127), (188,189, 34), ( 23,190,207)],  # noqa E501,E231,E201
        "c20":  [( 31,119,180), (174,199,232), (255,127, 14), (255,187,120), ( 44,160, 44), (152,223,138), (214, 39, 40), (255,152,150), (148,103,189), (197,176,213),   # noqa E501,E231,E201
                 (140, 86, 75), (196,156,148), (227,119,194), (247,182,210), (127,127,127), (199,199,199), (188,189, 34), (219,219,141), ( 23,190,207), (158,218,229)]   # noqa E501,E231,E201
        "c20b": [( 57, 59,121), ( 82, 84,163), (107,110,207), (156,158,222), ( 99,121, 57), (140,162, 82), (181,207,107), (206,219,156), (140,109, 49), (189,158, 57),   # noqa E501,E231,E201
                 (231,186, 82), (231,203,148), (132, 60, 57), (173, 73, 74), (214, 97,107), (231,150,156), (123, 65,115), (165, 81,148), (206,109,189), (222,158,214)]   # noqa E501,E231,E201
        "c20c": [( 49,130,189), (107,174,214), (158,202,225), (198,219,239), (230, 85, 13), (253,141, 60), (253,174,107), (253,208,162), ( 49,163, 84), (116,196,118),   # noqa E501,E231,E201
                 (161,217,155), (199,233,192), (117,107,177), (158,154,200), (188,189,220), (218,218,235), ( 99, 99, 99), (150,150,150), (189,189,189), (217,217,217)],  # noqa E501,E231,E201
    }

    @classmethod
    def _get(self, scheme, color, size):
        colors = scheme.get(color)
        if colors is None:
            return []
        elif size is None:
            return colors
        elif size <= len(colors):
            return colors[:size]
        else:
            print("Warning: size too large for scheme, stacking largest color list to match size")
            factor = math.ceil(size / (len(colors)))
            return (colors * factor)[:size]

    @classmethod
    def c10(self, size=None):
        return D3Colors._get(D3Colors.categorialScheme, "c10", size)

    @classmethod
    def c20(self, size=None):
        return D3Colors._get(D3Colors.categorialScheme, "c20", size)

    @classmethod
    def c20b(self, size=None):
        return D3Colors._get(D3Colors.categorialScheme, "c20b", size)

    @classmethod
    def c20c(self, size=None):
        return D3Colors._get(D3Colors.categorialScheme, "c20c", size)
